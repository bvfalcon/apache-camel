// Generated by camel-yaml-dsl-maven-plugin - do NOT edit this file!
package org.apache.camel.dsl.yaml.deserializers;

import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import org.apache.camel.dsl.yaml.common.YamlDeserializationContext;
import org.apache.camel.dsl.yaml.common.YamlDeserializerSupport;
import org.apache.camel.model.language.ExpressionDefinition;
import org.apache.camel.spi.annotations.YamlType;
import org.snakeyaml.engine.v2.api.ConstructNode;
import org.snakeyaml.engine.v2.nodes.MappingNode;
import org.snakeyaml.engine.v2.nodes.Node;
import org.snakeyaml.engine.v2.nodes.NodeTuple;

public final class ExpressionDeserializers extends YamlDeserializerSupport {
    private ExpressionDeserializers() {
    }

    public static ExpressionDefinition constructExpressionType(Node node) {
        MappingNode mn = asMappingNode(node);
        if (mn.getValue().size() != 1) {
            return null;
        }
        NodeTuple nt = mn.getValue().get(0);
        YamlDeserializationContext dc = getDeserializationContext(node);
        String key = asText(nt.getKeyNode());
        Node val = setDeserializationContext(nt.getValueNode(), dc);
        ExpressionDefinition answer = constructExpressionType(key, val);
        if (answer == null) {
            throw new org.apache.camel.dsl.yaml.common.exception.InvalidExpressionException(node, "Unknown expression with id: " + key);
        }
        return answer;
    }

    public static ExpressionDefinition constructExpressionType(String id, Node node) {
        switch(id) {
            case "expression": {
                return constructExpressionType(node);
            }
            case "expression-type": {
                return constructExpressionType(node);
            }
            case "expressionType": {
                return constructExpressionType(node);
            }
        }
        return null;
    }

    @YamlType(
            types = org.apache.camel.model.language.ExpressionDefinition.class,
            order = org.apache.camel.dsl.yaml.common.YamlDeserializerResolver.ORDER_LOWEST - 1
    )
    public static class ExpressionDefinitionDeserializers implements ConstructNode {
        @Override
        public Object construct(Node node) {
            return constructExpressionType(node);
        }
    }

    @YamlType(
            types = org.apache.camel.model.ExpressionSubElementDefinition.class,
            order = org.apache.camel.dsl.yaml.common.YamlDeserializerResolver.ORDER_LOWEST - 1
    )
    public static class ExpressionSubElementDefinitionDeserializers implements ConstructNode {
        @Override
        public Object construct(Node node) {
            ExpressionDefinition val = constructExpressionType(node);
            return new org.apache.camel.model.ExpressionSubElementDefinition(val);
        }
    }
}
